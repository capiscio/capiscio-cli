name: Release

on:
  release:
    types: [published]  # Trigger when release is published (not pre-release)
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to publish to npm (e.g., v1.2.1)'
        required: true
        type: string

jobs:
  # Wait for binary workflow to complete successfully
  wait-for-binaries:
    name: Wait for Binary Build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: Wait for binary workflow
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-binaries
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Build linux Binary"  # This will check if binary workflow completed
          ref: ${{ github.event.release.tag_name }}
          timeoutSeconds: 1800  # 30 minutes max wait

      - name: Check binary workflow result
        if: steps.wait-for-binaries.outputs.conclusion != 'success'
        run: |
          echo "‚ùå Binary workflow failed or timed out. Cannot publish to npm."
          exit 1

  publish:
    name: Publish to NPM
    needs: wait-for-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # For NPM provenance
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run typecheck
      run: npm run typecheck
      
    - name: Run tests
      run: npm test
      
    - name: Build CLI
      run: npm run build
      
    - name: Test CLI functionality
      run: |
        node dist/cli.js --version
        node dist/cli.js --help
        
    - name: Publish to NPM
      run: npm publish --access public --provenance
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
