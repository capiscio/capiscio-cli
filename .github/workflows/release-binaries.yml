name: Build and Release Binaries

on:
  release:
    types: [created]  # Only trigger on draft creation - uploads assets before release becomes immutable
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to build binaries for (e.g., v1.2.1)'
        required: true
        default: 'v1.2.1'

# Explicit permissions for security
permissions:
  contents: write  # Needed to upload release assets
  actions: read

jobs:
  build-binaries:
    name: Build ${{ matrix.platform }} Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            target: node18-linux-x64
            binary_name: capiscio-linux-x64
            
          - os: macos-latest
            platform: darwin
            target: node18-macos-x64
            binary_name: capiscio-darwin-x64
            
          - os: macos-latest
            platform: darwin
            target: node18-macos-arm64
            binary_name: capiscio-darwin-arm64
            
          - os: windows-latest
            platform: win32
            target: node18-win-x64
            binary_name: capiscio-win-x64.exe
            
          - os: windows-latest
            platform: win32
            target: node18-win-arm64
            binary_name: capiscio-win-arm64.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Bundle CLI with esbuild
        run: |
          npx esbuild src/cli.ts \
            --bundle \
            --platform=node \
            --target=node18 \
            --outfile=dist/cli-bundled.js \
            --banner:js="#!/usr/bin/env node"

      - name: Create binary directory
        run: mkdir -p dist/binaries

      - name: Create binary with pkg
        run: |
          npx pkg dist/cli-bundled.js \
            --targets ${{ matrix.target }} \
            --output dist/binaries/${{ matrix.binary_name }}

      - name: Sign macOS binary (ad-hoc)
        if: runner.os == 'macOS'
        run: |
          codesign --sign - --force --deep dist/binaries/${{ matrix.binary_name }}

      - name: Test binary (Unix)
        if: runner.os != 'Windows'
        run: |
          chmod +x dist/binaries/${{ matrix.binary_name }}
          ./dist/binaries/${{ matrix.binary_name }} --version

      - name: Test binary (Windows)
        if: runner.os == 'Windows'
        run: |
          dist\binaries\${{ matrix.binary_name }} --version

      - name: Create tarball for Linux binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist/binaries
          tar -czf capiscio-linux-x64.tar.gz capiscio-linux-x64
          # Remove the original binary since we now have the tarball
          rm capiscio-linux-x64

      - name: Create tarball for macOS binary
        if: matrix.os == 'macos-latest'
        run: |
          cd dist/binaries
          tar -czf ${{ matrix.binary_name }}.tar.gz ${{ matrix.binary_name }}
          # Remove the original binary since we now have the tarball
          rm ${{ matrix.binary_name }}

      - name: Upload binary to draft release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: dist/binaries/${{ matrix.binary_name }}${{ (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest') && '.tar.gz' || '' }}
          tag_name: ${{ github.event.release.tag_name }}
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binary artifact (on manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}${{ (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest') && '.tar.gz' || '' }}
          path: dist/binaries/${{ matrix.binary_name }}${{ (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest') && '.tar.gz' || '' }}
          retention-days: 7

  # Summary job
  summary:
    name: Build Summary
    needs: build-binaries
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Create summary
        run: |
          echo "# Binary Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build-binaries.result }}" == "success" ]]; then
            echo "✅ **All binaries built and uploaded successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Next steps:**" >> $GITHUB_STEP_SUMMARY
            echo "1. Review the draft release at: https://github.com/capiscio/capiscio-cli/releases" >> $GITHUB_STEP_SUMMARY
            echo "2. Publish the release to trigger npm and PyPI workflows" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Binary build failed**" >> $GITHUB_STEP_SUMMARY
          fi